#!/bin/bash

# Setup script for qat-artifacts repository structure
# Run this in the qat-artifacts repo to prepare it for receiving artifacts

echo "Setting up QAT Artifacts Repository Structure..."

# Create directory structure
mkdir -p runs
mkdir -p docs
mkdir -p .github/workflows

# Create README
cat > README.md <<'EOF'
# QAT Artifacts Repository

This repository hosts public artifacts from QA Automation Tool test runs.

## Purpose

While the main QA automation code remains private, this repository provides:
- Test execution summaries
- Test results (Excel files)
- Metadata for accessing media files
- Historical test run data

## Structure

```
/runs
  /{run-id}/
    - summary.json      # Test execution summary
    - results-{id}.xlsx # Detailed test results
    - metadata.json     # Links to media files
    - README.md         # Run-specific documentation
```

## Accessing Media Files

Screenshots and videos are stored in Azure Blob Storage for efficiency.
Check the `metadata.json` file in each run directory for access URLs.

## Data Retention

Artifacts older than 60 days may be automatically cleaned up.

---

*Generated by [QA Automation Tool](https://qa-automation-tool.vercel.app/)*
EOF

# Create cleanup workflow
cat > .github/workflows/cleanup.yml <<'EOF'
name: Cleanup Old Artifacts

on:
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Remove old artifacts
        run: |
          # Remove directories older than 60 days
          find runs -maxdepth 1 -type d -mtime +60 -exec rm -rf {} \; 2>/dev/null || true

      - name: Commit cleanup
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --staged --quiet || {
            git commit -m "Cleanup: Remove artifacts older than 60 days"
            git push
          }
EOF

# Create .gitignore
cat > .gitignore <<'EOF'
.DS_Store
*.tmp
*.log
node_modules/
EOF

echo "âœ… Repository structure created successfully!"
echo ""
echo "Next steps:"
echo "1. Commit and push these changes to qat-artifacts repo"
echo "2. Create ARTIFACTS_REPO_TOKEN in qa-automation-tool secrets"
echo "3. Test the publish-artifacts.yml workflow manually"